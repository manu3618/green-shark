[
    {
        "Id": "tag:manu.hbrt.eu,2019-04-01:/1683.html",
        "Content": "aileron ( https://commons.wikimedia.org/wiki/File:Aileron_de_requin.jpg ) Vertical stabilizer (Photo credit: Wikipedia)\n\nThis post is about yaw ( http://www.av8n.com/how/htm/yaw.html ) control. This is also the post for which I did not find many references.\n\nRemember the yaw is the axis controlled by the rudder. The rudder acts as any foil, providing a force dependant of its angle of attack. This angle of attack is function of side slip angle (noted \u03b2 ) and the rudder's deflection.\n\nBasically, the rudder command an effort on the stabilizer, inducing a rotation around the yaw axis. Note that the stabilizer also induce a force on this axis. The stabilizer's force tend reduce sideway slip ( https://en.wikipedia.org/wiki/Slip_(aerodynamics)#Sideslip ) . This momentum grows with speed.\n\n----------\nOn the way\n----------\n\nThe aircraft velocity is high, there is little risks to stall. The goal is to avoid extra drag due to going sideways. When the pilot's rudder is at neutral position, the aircraft must go straight ahead and the pilot should command the sideslip angle. When performing turns, pilot's input to neutral must result coordinated turns (rudder not in neutral position). Yaw control is also used for stabilisation purpose (e.g. yaw damping ( https://en.wikipedia.org/wiki/Yaw_damper ) ).\n\n---------------\nAt low altitude\n---------------\n\nWhen really close to the ground, roll cannot be used to control airplane's trajectory. The bank angle is limited due to both the ground clearance and the low speed (when near stall, having wings not leveled is not wise). Thus, the rudder is used to control direction.\n\n----------\nNormal law\n----------\n\nNormal law is used in flight in normal condition. The A320 and the A380 does not act the same way.\n\n* the A320 adds pilots' input and flight-by-wire (FBW) orders [2] ( #id4 ) . The FBW system add orders so that with neutral pilot input, it handles yaw damping and coordinates turns\n* on the A380, the pilot's input commands sideslip angle.\n\n----------\nGround law\n----------\n\nOn the A380, the pilot control the yaw rate [1] ( #id3 ) . I found no evidence for the A320, thus I assume the FBW system adds no input.\n\n----------\nDirect law\n----------\n\n[1] ( #id2 ) source: A380 Briefing For Pilots, march 2006\n\n[2] ( #id1 ) source: AAIB Bulletin: 8/2008 incident report ( https://assets.publishing.service.gov.uk/media/5422ee95e5274a1317000225/Airbus_A319-131__G-DBCI_08-08.pdf )\n\n----------------------\n(Non-)related articles\n----------------------\n\n* Special Conditions: Airbus Model A350-900 Series Airplane; Electronic Flight-Control System: Lateral-Directional and Longitudinal Stability, and... ( http://www.hispanicbusiness.com/2014/7/25/special_conditions_airbus_model_a350-900_series.htm )\n* Yaw/roll - affect on heading ( http://www.pprune.org/private-flying/528720-yaw-roll-affect-heading.html )\n* Axes of Control ( http://aeronauticshelp.wordpress.com/?p=52 )",
        "Date": "2019-04-01T19:47:00+02:00",
        "Title": "C*: Yaw",
        "Link": "http://manu.hbrt.eu/1683.html"
    },
    {
        "Id": "tag:manu.hbrt.eu,2019-03-29:/latex-makefile-updated.html",
        "Content": "My default LaTeX makefile evolved. Here is an update:\n\nThe makefile ( http://manu.hbrt.eu/files/makefile.latex ) looks like:\n\nLATEX = pdflatex BIBTEX = bibtex BIB = RERUN = '(There is undefined reference|Rerun to get (cross-references|the bars) right)' %.pdf:%.tex ${ LATEX } $< @if [ -e $* .bbl ] ; then ${ BIBTEX } $* && ${ LATEX } $< && ${ LATEX } $< ; fi @if egrep -q $( RERUN ) $* .log ; then ${ LATEX } $< ; fi %.aux %.log: %.tex ${ LATEX } $< while grep -e 'Rerun to get' -e 'run LaTeX again' *.log ; do ${ LATEX } $< ; done %.idx %.toc: %.tex ${ LATEX } $< %.bbl %.blg: %.aux $( BIB ) bibtex $< && ${ LATEX } $* .tex %.ind: %.idx makeindex $< && ${ LATEX } $* .tex indent: *tex for i in *.tex ; do latexindent -w -y = \"defaultIndent:' '\" $$ i ; done clean: rm -fv *.log *.aux *.dvi *.toc *.lot *.lof *.snm *.nav *.out *.tns *.bak?\n\nThe main evolutions is the indent target to autoindent *.tex file.",
        "Date": "2019-03-29T10:28:00+01:00",
        "Title": "LaTeX makefile updated",
        "Link": "http://manu.hbrt.eu/latex-makefile-updated.html"
    },
    {
        "Id": "tag:manu.hbrt.eu,2019-03-28:/functional-block-diagram.html",
        "Content": "How to make a block diagram ( https://en.wikipedia.org/wiki/Functional_flow_block_diagram ) with \\LaTeX ?\n\nThis article is mainly inspired by tex example ( http://www.texample.net/tikz/examples/control-system-principles/ ) .\n\nHere is an example ( http://manu.hbrt.eu/files/block.tex ) with tikz ( https://sourceforge.net/projects/pgf/ ) resulting in the following figure:\n\nresult ( http://manu.hbrt.eu/files/block.pdf )\n\nThe code:\n\n\\documentclass { article } \\usepackage [landscape,margin=1cm] { geometry } \\usepackage { tikz } \\usetikzlibrary { shapes,arrows } \\begin { document } \\tikzstyle { block } =[draw,fill=red!20,rectangle,minimum height=3em,minimum width=3em] \\tikzstyle { sum } =[draw,fill=red!20,circle,node distance=3em] \\tikzstyle { input } =[coordinate] \\tikzstyle { output } =[coordinate] \\tikzstyle { pinstyle } =[pin edge= { to-,thin,black } ] \\begin { tikzpicture } [auto,node distance=8em,>=latex'] \\node [input,name=input] {} ; \\node [block,right of=input] (first) { First block } ; \\draw [draw,->] (input) -- node {} (first); % increase node distance to avoid overlap \\node [block,right of=first,node distance=15em] (second) { Block with math and long text: $ \\int $ } ; \\draw [->] (first) -- (second); % second input \\node [sum,right of=second,node distance=12em] (circle0) { X } ; \\node [input,above of=circle0] (input0) { second input } ; \\draw [->] (second) -- node { $ + $ } (circle0); \\draw [->] (input0) -- node { $ ++ $ } (circle0); % nominal block \\node [block,right of=circle0,name=useless,node distance=14em,pin={[pinstyle] above:Upward entry } ,pin= { [pinstyle]below:Other entry } ] { Useless block } ; \\draw [->] (circle0) -- node { something written } (useless); \\node [block,right of=useless] (last) { Last } ; \\draw [->,dashed] (useless) -- node[name=dashed] {} (last); % output1 \\node [output,right of=last,node distance=4em] (shadow) {} ; \\node [output,right of=shadow,node distance=4em] (output) {} ; \\draw [->] (last) -- node { out } (output); % feedback \\node [block,below of=dashed] (feedback) {} ; \\draw [->] (shadow) |- (feedback); % second circle \\node [sum,left of=feedback,node distance=6em] (circle1) { $ + $ } ; \\draw [->] (feedback) -- (circle1); \\draw [->] (circle1) -| node { ugly } (circle0); \\node [input,below of=circle1,node distance=2em] (input2) {} ; \\draw [->] (input2) -- (circle1); \\end { tikzpicture } \\end { document }",
        "Date": "2019-03-28T16:24:00+01:00",
        "Title": "Functional Block diagram",
        "Link": "http://manu.hbrt.eu/functional-block-diagram.html"
    }
]
